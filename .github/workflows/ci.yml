name: CI

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: ['main']

  push:
    branches: ['main']

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python: '3.12'

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up environment variables
        run: |
          echo "DATABASE_URI=sqlite+aiosqlite:///./tokenscanner.db" > tokenscanner/src/.env

      - name: Spin up containers
        run: docker compose up --build -d

      # our workaround for startup lag and healthchecks
      # - name: Wait for app to be healthy (optional)
      #   run: |
      #     for i in {1..10}; do
      #       STATUS=$(docker compose ps --services --filter "status=running" | grep tokenscan_server || true)
      #       if [ "$STATUS" = "tokenscan_server" ]; then
      #         echo "tokenscan_server is running!"
      #         break
      #       fi
      #       echo "Waiting for tokenscan_server to be up..."
      #       sleep 3
      #     done

      - name: Run Unit and Integration Tests
        # run: docker compose exec server pytest
        run: docker compose run --rm --entrypoint "" server pytest

      - name: Teardown containers
        run: docker compose down
